{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"HW12","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPNOLHdmNWYdm57ld1wteuV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["!apt update\n","!apt install python-opengl xvfb -y\n","!pip install gym[box2d]==0.18.3 pyvirtualdisplay tqdm numpy==1.19.5 torch==1.8.1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QewpWSxdeHKw","executionInfo":{"status":"ok","timestamp":1646037678563,"user_tz":-480,"elapsed":16494,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"471a828e-3a2d-4d04-c930-69c24d051762"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Hit:1 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease\n","Ign:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","Hit:3 http://security.ubuntu.com/ubuntu bionic-security InRelease\n","Ign:4 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Hit:5 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease\n","Hit:6 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release\n","Hit:7 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Hit:8 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Hit:9 http://archive.ubuntu.com/ubuntu bionic-updates InRelease\n","Hit:10 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Hit:12 http://archive.ubuntu.com/ubuntu bionic-backports InRelease\n","Hit:14 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease\n","Hit:15 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","69 packages can be upgraded. Run 'apt list --upgradable' to see them.\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","python-opengl is already the newest version (3.1.0+dfsg-1).\n","xvfb is already the newest version (2:1.19.6-1ubuntu4.10).\n","The following package was automatically installed and is no longer required:\n","  libnvidia-common-470\n","Use 'apt autoremove' to remove it.\n","0 upgraded, 0 newly installed, 0 to remove and 69 not upgraded.\n","Requirement already satisfied: gym[box2d]==0.18.3 in /usr/local/lib/python3.7/dist-packages (0.18.3)\n","Requirement already satisfied: pyvirtualdisplay in /usr/local/lib/python3.7/dist-packages (3.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (4.62.3)\n","Requirement already satisfied: numpy==1.19.5 in /usr/local/lib/python3.7/dist-packages (1.19.5)\n","Requirement already satisfied: torch==1.8.1 in /usr/local/lib/python3.7/dist-packages (1.8.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch==1.8.1) (3.10.0.2)\n","Requirement already satisfied: Pillow<=8.2.0 in /usr/local/lib/python3.7/dist-packages (from gym[box2d]==0.18.3) (7.1.2)\n","Requirement already satisfied: cloudpickle<1.7.0,>=1.2.0 in /usr/local/lib/python3.7/dist-packages (from gym[box2d]==0.18.3) (1.3.0)\n","Requirement already satisfied: pyglet<=1.5.15,>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from gym[box2d]==0.18.3) (1.5.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from gym[box2d]==0.18.3) (1.4.1)\n","Requirement already satisfied: box2d-py~=2.3.5 in /usr/local/lib/python3.7/dist-packages (from gym[box2d]==0.18.3) (2.3.8)\n","Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from pyglet<=1.5.15,>=1.4.0->gym[box2d]==0.18.3) (0.16.0)\n"]}]},{"cell_type":"code","source":["%%capture\n","from pyvirtualdisplay import Display\n","virtual_display = Display(visible= 0, size= (1400, 900))\n","virtual_display.start()\n","\n","%matplotlib inline\n","import matplotlib.pyplot as plt\n","\n","from IPython import display\n","\n","import numpy as np\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import torch.nn.functional as F\n","from torch.distributions import Categorical\n","from tqdm.notebook import tqdm"],"metadata":{"id":"Yab3dQ6ZXxcr","executionInfo":{"status":"ok","timestamp":1646037688853,"user_tz":-480,"elapsed":2615,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["!nvidia-smi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iB4MGlkamQqt","executionInfo":{"status":"ok","timestamp":1646039472969,"user_tz":-480,"elapsed":461,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"11396d7c-1f7e-4aa3-c042-9b19ef8f23f3"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Mon Feb 28 09:11:10 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla K80           Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   35C    P8    28W / 149W |      0MiB / 11441MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}]},{"cell_type":"code","source":["seed = 543\n","def fix(env, seed):\n","  env.seed(seed)\n","  env.action_space.seed(seed)\n","  torch.manual_seed(seed)\n","  torch.cuda.manual_seed(seed)\n","  torch.cuda.manual_seed_all(seed)\n","  np.random.seed(seed)\n","  random.seed(seed)\n","  torch.set_deterministic(True)\n","  torch.backends.cudnn.benchmark = False\n","  torch.backends.cudnn.deterministic = True"],"metadata":{"id":"QwYl9ZOPYvxE","executionInfo":{"status":"ok","timestamp":1646037769949,"user_tz":-480,"elapsed":2,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["%%capture\n","import gym\n","import random\n","import numpy as np\n","\n","env = gym.make('LunarLander-v2')\n","\n","fix(env, seed)"],"metadata":{"id":"TlYXMmMSZc3Q","executionInfo":{"status":"ok","timestamp":1646040033134,"user_tz":-480,"elapsed":447,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["import time\n","start = time.time()"],"metadata":{"id":"_iX66crwZqSI","executionInfo":{"status":"ok","timestamp":1646040034920,"user_tz":-480,"elapsed":1,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["!pip freeze"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fKh5a28xZuCd","executionInfo":{"status":"ok","timestamp":1646040037102,"user_tz":-480,"elapsed":627,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"51eefbec-b0ad-49f1-f898-80bbbbcbaec5"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["absl-py==1.0.0\n","alabaster==0.7.12\n","albumentations==0.1.12\n","altair==4.2.0\n","appdirs==1.4.4\n","argon2-cffi==21.3.0\n","argon2-cffi-bindings==21.2.0\n","arviz==0.11.4\n","astor==0.8.1\n","astropy==4.3.1\n","astunparse==1.6.3\n","atari-py==0.2.9\n","atomicwrites==1.4.0\n","attrs==21.4.0\n","audioread==2.1.9\n","autograd==1.3\n","Babel==2.9.1\n","backcall==0.2.0\n","beautifulsoup4==4.6.3\n","bleach==4.1.0\n","blis==0.4.1\n","bokeh==2.3.3\n","Bottleneck==1.3.2\n","box2d-py==2.3.8\n","branca==0.4.2\n","bs4==0.0.1\n","CacheControl==0.12.10\n","cached-property==1.5.2\n","cachetools==4.2.4\n","catalogue==1.0.0\n","certifi==2021.10.8\n","cffi==1.15.0\n","cftime==1.5.2\n","chardet==3.0.4\n","charset-normalizer==2.0.12\n","click==7.1.2\n","cloudpickle==1.3.0\n","cmake==3.12.0\n","cmdstanpy==0.9.5\n","colorcet==3.0.0\n","colorlover==0.3.0\n","community==1.0.0b1\n","contextlib2==0.5.5\n","convertdate==2.4.0\n","coverage==3.7.1\n","coveralls==0.5\n","crcmod==1.7\n","cufflinks==0.17.3\n","cupy-cuda111==9.4.0\n","cvxopt==1.2.7\n","cvxpy==1.0.31\n","cycler==0.11.0\n","cymem==2.0.6\n","Cython==0.29.28\n","daft==0.0.4\n","dask==2.12.0\n","datascience==0.10.6\n","debugpy==1.0.0\n","decorator==4.4.2\n","defusedxml==0.7.1\n","descartes==1.1.0\n","dill==0.3.4\n","distributed==1.25.3\n","dlib @ file:///dlib-19.18.0-cp37-cp37m-linux_x86_64.whl\n","dm-tree==0.1.6\n","docopt==0.6.2\n","docutils==0.17.1\n","dopamine-rl==1.0.5\n","earthengine-api==0.1.299\n","easydict==1.9\n","ecos==2.0.10\n","editdistance==0.5.3\n","en-core-web-sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.2.5/en_core_web_sm-2.2.5.tar.gz\n","entrypoints==0.4\n","ephem==4.1.3\n","et-xmlfile==1.1.0\n","fa2==0.3.5\n","fastai==1.0.61\n","fastdtw==0.3.4\n","fastprogress==1.0.2\n","fastrlock==0.8\n","fbprophet==0.7.1\n","feather-format==0.4.1\n","filelock==3.6.0\n","firebase-admin==4.4.0\n","fix-yahoo-finance==0.0.22\n","Flask==1.1.4\n","flatbuffers==2.0\n","folium==0.8.3\n","future==0.16.0\n","gast==0.5.3\n","GDAL==2.2.2\n","gdown==4.2.1\n","gensim==3.6.0\n","geographiclib==1.52\n","geopy==1.17.0\n","gin-config==0.5.0\n","glob2==0.7\n","google==2.0.3\n","google-api-core==1.26.3\n","google-api-python-client==1.12.10\n","google-auth==1.35.0\n","google-auth-httplib2==0.0.4\n","google-auth-oauthlib==0.4.6\n","google-cloud-bigquery==1.21.0\n","google-cloud-bigquery-storage==1.1.0\n","google-cloud-core==1.0.3\n","google-cloud-datastore==1.8.0\n","google-cloud-firestore==1.7.0\n","google-cloud-language==1.2.0\n","google-cloud-storage==1.18.1\n","google-cloud-translate==1.5.0\n","google-colab @ file:///colabtools/dist/google-colab-1.0.0.tar.gz\n","google-pasta==0.2.0\n","google-resumable-media==0.4.1\n","googleapis-common-protos==1.54.0\n","googledrivedownloader==0.4\n","graphviz==0.10.1\n","greenlet==1.1.2\n","grpcio==1.43.0\n","gspread==3.4.2\n","gspread-dataframe==3.0.8\n","gym==0.18.3\n","h5py==3.1.0\n","HeapDict==1.0.1\n","hijri-converter==2.2.3\n","holidays==0.10.5.2\n","holoviews==1.14.8\n","html5lib==1.0.1\n","httpimport==0.5.18\n","httplib2==0.17.4\n","httplib2shim==0.0.3\n","humanize==0.5.1\n","hyperopt==0.1.2\n","ideep4py==2.0.0.post3\n","idna==2.10\n","imageio==2.4.1\n","imagesize==1.3.0\n","imbalanced-learn==0.8.1\n","imblearn==0.0\n","imgaug==0.2.9\n","importlib-metadata==4.11.1\n","importlib-resources==5.4.0\n","imutils==0.5.4\n","inflect==2.1.0\n","iniconfig==1.1.1\n","intel-openmp==2022.0.2\n","intervaltree==2.1.0\n","ipykernel==4.10.1\n","ipython==5.5.0\n","ipython-genutils==0.2.0\n","ipython-sql==0.3.9\n","ipywidgets==7.6.5\n","itsdangerous==1.1.0\n","jax==0.2.25\n","jaxlib @ https://storage.googleapis.com/jax-releases/cuda111/jaxlib-0.1.71+cuda111-cp37-none-manylinux2010_x86_64.whl\n","jedi==0.18.1\n","jieba==0.42.1\n","Jinja2==2.11.3\n","joblib==1.1.0\n","jpeg4py==0.1.4\n","jsonschema==4.3.3\n","jupyter==1.0.0\n","jupyter-client==5.3.5\n","jupyter-console==5.2.0\n","jupyter-core==4.9.2\n","jupyterlab-pygments==0.1.2\n","jupyterlab-widgets==1.0.2\n","kaggle==1.5.12\n","kapre==0.3.7\n","keras==2.8.0\n","Keras-Preprocessing==1.1.2\n","keras-vis==0.4.1\n","kiwisolver==1.3.2\n","korean-lunar-calendar==0.2.1\n","libclang==13.0.0\n","librosa==0.8.1\n","lightgbm==2.2.3\n","llvmlite==0.34.0\n","lmdb==0.99\n","LunarCalendar==0.0.9\n","lxml==4.2.6\n","Markdown==3.3.6\n","MarkupSafe==2.0.1\n","matplotlib==3.2.2\n","matplotlib-inline==0.1.3\n","matplotlib-venn==0.11.6\n","missingno==0.5.0\n","mistune==0.8.4\n","mizani==0.6.0\n","mkl==2019.0\n","mlxtend==0.14.0\n","more-itertools==8.12.0\n","moviepy==0.2.3.5\n","mpmath==1.2.1\n","msgpack==1.0.3\n","multiprocess==0.70.12.2\n","multitasking==0.0.10\n","murmurhash==1.0.6\n","music21==5.5.0\n","natsort==5.5.0\n","nbclient==0.5.11\n","nbconvert==5.6.1\n","nbformat==5.1.3\n","nest-asyncio==1.5.4\n","netCDF4==1.5.8\n","networkx==2.6.3\n","nibabel==3.0.2\n","nltk==3.2.5\n","notebook==5.3.1\n","numba==0.51.2\n","numexpr==2.8.1\n","numpy==1.19.5\n","nvidia-ml-py3==7.352.0\n","oauth2client==4.1.3\n","oauthlib==3.2.0\n","okgrade==0.4.3\n","opencv-contrib-python==4.1.2.30\n","opencv-python==4.1.2.30\n","openpyxl==3.0.9\n","opt-einsum==3.3.0\n","osqp==0.6.2.post0\n","packaging==21.3\n","palettable==3.3.0\n","pandas==1.3.5\n","pandas-datareader==0.9.0\n","pandas-gbq==0.13.3\n","pandas-profiling==1.4.1\n","pandocfilters==1.5.0\n","panel==0.12.1\n","param==1.12.0\n","parso==0.8.3\n","pathlib==1.0.1\n","patsy==0.5.2\n","pep517==0.12.0\n","pexpect==4.8.0\n","pickleshare==0.7.5\n","Pillow==7.1.2\n","pip-tools==6.2.0\n","plac==1.1.3\n","plotly==5.5.0\n","plotnine==0.6.0\n","pluggy==0.7.1\n","pooch==1.6.0\n","portpicker==1.3.9\n","prefetch-generator==1.0.1\n","preshed==3.0.6\n","prettytable==3.1.1\n","progressbar2==3.38.0\n","prometheus-client==0.13.1\n","promise==2.3\n","prompt-toolkit==1.0.18\n","protobuf==3.17.3\n","psutil==5.4.8\n","psycopg2==2.7.6.1\n","ptyprocess==0.7.0\n","py==1.11.0\n","pyarrow==6.0.1\n","pyasn1==0.4.8\n","pyasn1-modules==0.2.8\n","pycocotools==2.0.4\n","pycparser==2.21\n","pyct==0.4.8\n","pydata-google-auth==1.3.0\n","pydot==1.3.0\n","pydot-ng==2.0.0\n","pydotplus==2.0.2\n","PyDrive==1.3.1\n","pyemd==0.5.1\n","pyerfa==2.0.0.1\n","pyglet==1.5.0\n","Pygments==2.6.1\n","pygobject==3.26.1\n","pymc3==3.11.4\n","PyMeeus==0.5.11\n","pymongo==4.0.1\n","pymystem3==0.2.0\n","PyOpenGL==3.1.5\n","pyparsing==3.0.7\n","pyrsistent==0.18.1\n","pysndfile==1.3.8\n","PySocks==1.7.1\n","pystan==2.19.1.1\n","pytest==3.6.4\n","python-apt==0.0.0\n","python-chess==0.23.11\n","python-dateutil==2.8.2\n","python-louvain==0.16\n","python-slugify==6.0.1\n","python-utils==3.1.0\n","pytz==2018.9\n","PyVirtualDisplay==3.0\n","pyviz-comms==2.1.0\n","PyWavelets==1.2.0\n","PyYAML==3.13\n","pyzmq==22.3.0\n","qdldl==0.1.5.post0\n","qtconsole==5.2.2\n","QtPy==2.0.1\n","regex==2019.12.20\n","requests==2.23.0\n","requests-oauthlib==1.3.1\n","resampy==0.2.2\n","rpy2==3.4.5\n","rsa==4.8\n","scikit-image==0.18.3\n","scikit-learn==1.0.2\n","scipy==1.4.1\n","screen-resolution-extra==0.0.0\n","scs==3.1.0\n","seaborn==0.11.2\n","semver==2.13.0\n","Send2Trash==1.8.0\n","setuptools-git==1.2\n","Shapely==1.8.1\n","simplegeneric==0.8.1\n","six==1.15.0\n","sklearn==0.0\n","sklearn-pandas==1.8.0\n","smart-open==5.2.1\n","snowballstemmer==2.2.0\n","sortedcontainers==2.4.0\n","SoundFile==0.10.3.post1\n","spacy==2.2.4\n","Sphinx==1.8.6\n","sphinxcontrib-serializinghtml==1.1.5\n","sphinxcontrib-websupport==1.2.4\n","SQLAlchemy==1.4.31\n","sqlparse==0.4.2\n","srsly==1.0.5\n","statsmodels==0.10.2\n","sympy==1.7.1\n","tables==3.7.0\n","tabulate==0.8.9\n","tblib==1.7.0\n","tenacity==8.0.1\n","tensorboard==2.8.0\n","tensorboard-data-server==0.6.1\n","tensorboard-plugin-wit==1.8.1\n","tensorflow @ file:///tensorflow-2.8.0-cp37-cp37m-linux_x86_64.whl\n","tensorflow-datasets==4.0.1\n","tensorflow-estimator==2.8.0\n","tensorflow-gcs-config==2.8.0\n","tensorflow-hub==0.12.0\n","tensorflow-io-gcs-filesystem==0.24.0\n","tensorflow-metadata==1.6.0\n","tensorflow-probability==0.16.0\n","termcolor==1.1.0\n","terminado==0.13.1\n","testpath==0.5.0\n","text-unidecode==1.3\n","textblob==0.15.3\n","Theano-PyMC==1.1.2\n","thinc==7.4.0\n","threadpoolctl==3.1.0\n","tifffile==2021.11.2\n","tomli==2.0.1\n","toolz==0.11.2\n","torch==1.8.1\n","torchaudio @ https://download.pytorch.org/whl/cu111/torchaudio-0.10.0%2Bcu111-cp37-cp37m-linux_x86_64.whl\n","torchsummary==1.5.1\n","torchtext==0.11.0\n","torchvision @ https://download.pytorch.org/whl/cu111/torchvision-0.11.1%2Bcu111-cp37-cp37m-linux_x86_64.whl\n","tornado==5.1.1\n","tqdm==4.62.3\n","traitlets==5.1.1\n","tweepy==3.10.0\n","typeguard==2.7.1\n","typing-extensions==3.10.0.2\n","tzlocal==1.5.1\n","uritemplate==3.0.1\n","urllib3==1.24.3\n","vega-datasets==0.9.0\n","wasabi==0.9.0\n","wcwidth==0.2.5\n","webencodings==0.5.1\n","Werkzeug==1.0.1\n","widgetsnbextension==3.5.2\n","wordcloud==1.5.0\n","wrapt==1.13.3\n","xarray==0.18.2\n","xgboost==0.90\n","xkit==0.0.0\n","xlrd==1.1.0\n","xlwt==1.3.0\n","zict==2.0.0\n","zipp==3.7.0\n"]}]},{"cell_type":"code","source":["print(env.observation_space)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"obPGp5-2Z3VU","executionInfo":{"status":"ok","timestamp":1646040038603,"user_tz":-480,"elapsed":2,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"af44575e-377d-4ab7-f545-279576202cab"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Box(-inf, inf, (8,), float32)\n"]}]},{"cell_type":"code","source":["print(env.action_space)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JVXLXO8kaCYN","executionInfo":{"status":"ok","timestamp":1646040040013,"user_tz":-480,"elapsed":2,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"14142733-8761-4a94-9eca-c268e9447f09"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Discrete(4)\n"]}]},{"cell_type":"code","source":["initial_state = env.reset()\n","print(initial_state)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3dRGsG2OaPTt","executionInfo":{"status":"ok","timestamp":1646040041525,"user_tz":-480,"elapsed":2,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"b00f0f7b-e21b-45a6-da7c-8d64970c747b"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 0.00396109  1.4083536   0.40119505 -0.11407257 -0.00458307 -0.09087662\n","  0.          0.        ]\n"]}]},{"cell_type":"code","source":["random_action = env.action_space.sample()\n","print(random_action)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B8eGOe3OaX4X","executionInfo":{"status":"ok","timestamp":1646040042898,"user_tz":-480,"elapsed":2,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"5eb17b7c-0bbd-4ab7-f260-e9f039a7965f"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n"]}]},{"cell_type":"code","source":["observation, reward, done, info = env.step(random_action)\n","env.step(random_action)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RZFhb6BNa0Dr","executionInfo":{"status":"ok","timestamp":1646040044953,"user_tz":-480,"elapsed":571,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"8f0c15f5-665e-4ced-f72d-f49a2fc7f030"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 0.01188354,  1.4014664 ,  0.40066734, -0.16640776, -0.01356165,\n","        -0.08976705,  0.        ,  0.        ], dtype=float32),\n"," -1.030020276808159,\n"," False,\n"," {})"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["print(done)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v71Ho-E2bSXP","executionInfo":{"status":"ok","timestamp":1646040049185,"user_tz":-480,"elapsed":587,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"c43b4f36-6556-4e59-8ff1-7f566eda3165"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","source":["print(reward)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_pwPHcT8acoG","executionInfo":{"status":"ok","timestamp":1646040050634,"user_tz":-480,"elapsed":2,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"c16670e2-d999-47f5-9b9f-4e0b5dae3c82"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["-0.8588900517154912\n"]}]},{"cell_type":"code","source":["env.reset()\n","\n","img = plt.imshow(env.render(mode= 'rgb_array'))\n","\n","done = False\n","while not done:\n","  action = env.action_space.sample()\n","  observation, reward, done, _ = env.step(action)\n","\n","  img.set_data(env.render(mode= 'rgb_array'))\n","  display.display(plt.gcf())\n","  display.clear_output(wait= True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"rXyHoyRwagcd","executionInfo":{"status":"error","timestamp":1646040061244,"user_tz":-480,"elapsed":4,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}},"outputId":"e45e2ead-e6e6-49a6-97d1-7dffc22aaf9c"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-d43e82eff55f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0menv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0menv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrender\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0;34m'rgb_array'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mdone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'env' is not defined"]}]},{"cell_type":"code","source":["class PolicyGradientNetwork(nn.Module):\n","  def __init__(self):\n","    super().__init__()\n","    self.fc1 = nn.Linear(8, 16)\n","    self.fc2 = nn.Linear(16, 16)\n","    self.fc3 = nn.Linear(16, 4)\n","\n","  def forward(self, state):\n","    hid = torch.tanh(self.fc1(state))\n","    hid = torch.tanh(self.fc2(hid))\n","    return F.softmax(self.fc3(hid), dim= -1)"],"metadata":{"id":"kY7cs89pgDzj","executionInfo":{"status":"ok","timestamp":1646037991169,"user_tz":-480,"elapsed":381,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["class PolicyGradientAgent():\n","  def __init__(self, network):\n","    self.network = network\n","    self.optimizer = optim.SGD(self.network.parameters(), lr= 0.001)\n","\n","  def forward(self, state):\n","    return self.network(state)\n","  def learn(self, log_probs, rewards):\n","    loss = (-log_probs * rewards).sum()\n","\n","    self.optimizer.zero_grad()\n","    loss.backward()\n","    self.optimizer.step()\n","\n","  def sample(self, state):\n","    action_prob = self.network(torch.FloatTensor(state))\n","    action_dist = Categorical(action_prob)\n","    action = action_dist.sample()\n","    log_prob = action_dist.log_prob(action)\n","    return action.item(), log_prob\n","\n","  def save(self, PATH):\n","    Agent_Dict = {\n","        'network' : self.network.state_dict(),\n","        'optimizer' : self.optimizer.state_dict()\n","    }\n","    torch.save(Agent_Dict, PATH)\n","  \n","  def load(self, PATH):\n","    checkpoint = torch.load(PATH)\n","    self.network.load_state_dict(checkpoint['network'])\n","    self.optimizer.load_state_dict(checkpoint['optimizer'])"],"metadata":{"id":"eDEZZ5wZgo3m","executionInfo":{"status":"ok","timestamp":1646038466543,"user_tz":-480,"elapsed":386,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["network = PolicyGradientNetwork()\n","agent = PolicyGradientAgent(network)"],"metadata":{"id":"8ElHJsFwiclK","executionInfo":{"status":"ok","timestamp":1646038515203,"user_tz":-480,"elapsed":510,"user":{"displayName":"mark wu","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04816660482965861860"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["agent.network.train()\n","EPISODE_PER_BATTCH = 5\n","NUM_BATCH = 400\n","\n","avg_total_rewards, avg_final_rewards = [], []\n","\n","prg_bar = tqdm(range(NUM_BATCH))\n","for batch in prg_bar:\n","\n","  log_probs, rewards = [], []\n","  total_rewards, final_rewards = [], []\n","\n","  for episode in range(EPISODE_PER_BATTCH):\n","\n","    state = env.reset()\n","    total_reward, total_step = 0, 0\n","    seq_rewards = []\n","    while True:\n","      action, log_prob = agent.sample(state)\n","      next_state, reward, done, _ = env.step(action)\n","\n","      log_probs.append(log_prob)\n","      state = next_state\n","      total_reward += reward\n","      total_step += 1\n","      rewards.append(reward)\n","\n","      if done:\n","        final_rewards.append(reward)\n","        total_rewards.append(total_reward)\n","    print(f'rewards looks like ', np.shape(rewards))\n","    print(f'log_probs looks like', np.shape(log_probs))\n","\n","    avg_total_reward = sum(total_rewards) / len(total_rewards)\n","    avg_final_reward = sum(final_rewards) / len(final_rewards)\n","    avg_total_rewards.append(avg_total_reward)\n","    avg_final_rewards.append(avg_final_reward)\n","    prg_bar.set_description(f'Total: {avg_total_reward: 4.1f}, Final: {avg_final_reward: 4.1f}')\n","\n","    rewards = (rewards - np.meam(rewards)) / (np.std(rewards) + 1e-9)\n","    agent.learn(torch.stack(log_probs), torch.from_numpy(rewards))\n","    print('logs prob looks like ', torch.stack(log_probs).size())\n","    print('torch.from_numpy(rewards) looks like', torch.from_numpy(rewards).size())"],"metadata":{"id":"qilLWTfjio2A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["end = time.time()\n","plt.plot(avg_total_rewards)\n","plt.title(\"Total Rewards\")\n","plt.show()"],"metadata":{"id":"lqMv5rTbojtM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.plot(avg_final_rewards)\n","plt.title(\"Final Rewards\")\n","plt.show()"],"metadata":{"id":"X3EKwpQeouxC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f'total time is {end-start} sec')"],"metadata":{"id":"2JiQxtBjo2Qc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fix(env, seed)\n","agent.entwork.eval()\n","NUM_OF_TEST = 5\n","test_total_reward = []\n","action_list = []\n","for i in range(NUM_OF_TEST):\n","  actions = []\n","  state = env.reset()\n","\n","  img = plt.imshow(env.render(mode = 'rgb_array'))\n","\n","  total_reward = 0\n","\n","  done = False\n","  while not done:\n","    action, _ = agent.sample(state)\n","    actions.append(action)\n","    state, reward, done, _ = env.step(action)\n","\n","    total_reward += reward\n","\n","  print(total_reward)\n","  test_total_reward.append(total_reward)\n","\n","  action_list.append(actions)\n","  print('length of actions is ', len(actions))"],"metadata":{"id":"KyD5v6hSo73K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f'Your final reward is : %.2f' %np.mean(test_total_reward))"],"metadata":{"id":"kWu_KIJNp5Dj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f'Action list looks like ', action_list)\n","print(f\"Action list's shape looks like \", np.shape(action_list))"],"metadata":{"id":"Jl-bd_xEqCO9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["distribution = {}\n","for actions in action_list:\n","  for action in actions:\n","    if action not in distribution.keys():\n","      distribution[action] = 1\n","    else:\n","      distribution[action] += 1\n","  print(distribution)"],"metadata":{"id":"mk7MzmFzqaFv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["PATH = \"Action_List_test.npy\"\n","np.save(PATH, np.array(action_list))"],"metadata":{"id":"q807Hlieqyqz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","files.download(PATH)"],"metadata":{"id":"6zn3j41Oq9lX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["action_lsit = np.load(PATH, allow_pickle= True)\n","seed = 543\n","fix(env, seed)\n","\n","agent.network.eval()\n","\n","test_total_reward = []\n","for actions in action_list:\n","  state = env.reset()\n","  img = plt.imshow(env.render(mode= 'rgb_array'))\n","\n","  total_reward = 0\n","  done = False\n","\n","  done_count = 0\n","  for action in actions:\n","    state, reward, done, _ = env.step(action)\n","    done_count += 1\n","    total_reward += reward\n","    if done:\n","      break\n","\n","  print(f'Your reward is : %.2f'%total_reward)\n","  test_total_reward.append(total_reward)"],"metadata":{"id":"T3EujKsMrEwu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f'Your final reward is : %.2f'%np.mean(test_total_reward))"],"metadata":{"id":"E6wE78SYsDO1"},"execution_count":null,"outputs":[]}]}